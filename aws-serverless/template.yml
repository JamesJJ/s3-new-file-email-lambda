---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Lambda application that sends an email when files appear in S3
Parameters:
  S3Bucket:
    Type: String
  SesSendingIdentityArn:
    Type: String
  SesDestinationIdentityArn:
    Type: String
    Default: ''
  MailFrom:
    Type: String
  MailTo:
    Type: String
Conditions:
  NoSesDestinationIdentityArn: !Equals [!Ref SesDestinationIdentityArn, '']
Resources:
  Template:
    Type: AWS::SES::Template
    Properties:
      Template:
        TemplateName: !Join ['-', [!Ref AWS::StackName, sestemplate]]
        SubjectPart: '{{Subject}}'
        TextPart: |
          New files:
          {{#each Files}}
          {{Url}}
          {{/each}}
        HtmlPart: |
          <html><body><h1>New files:</h1>
          <ul>
          {{#each Files}}
          <li><a href="{{Url}}">{{FileName}}</a></li>
          {{/each}}
          </ul>
          </body>
          </html>
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join ['', [/aws/lambda/, !Ref Function]]
      RetentionInDays: '14'
  Function:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join ['-', [!Ref AWS::StackName, lambda]]
      Handler: main
      Runtime: go1.x
      CodeUri: .
      Description: Send an email when files appear in S3
      Timeout: 60
      MemorySize: 256
      Environment:
        Variables:
          APP_SESSOURCEARN: !Ref SesSendingIdentityArn
          APP_TEMPLATE: !Join ['-', [!Ref AWS::StackName, sestemplate]]
          APP_MAILFROM: !Ref MailFrom
          APP_MAILTO: !Ref MailTo
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Sid: AllowS3
              Effect: Allow
              Resource:
                - !Join ['', ['arn:aws:s3:::', !Ref S3Bucket]]
                - !Join ['', ['arn:aws:s3:::', !Ref S3Bucket, /*]]
              Action:
                - s3:GetBucketLocation
                - s3:GetObject
                - s3:ListBucket
            - Sid: AllowSesSend
              Effect: Allow
              Resource:
                - !Ref SesSendingIdentityArn
                - !If [NoSesDestinationIdentityArn, Ref: AWS::NoValue, Ref: SesDestinationIdentityArn]
              Action:
                - ses:SendTemplatedEmail
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt Function.Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: !Sub 'arn:aws:s3:::${S3Bucket}'
Outputs:
  LambdaARN:
    Description: ARN of Lambda Function
    Value: !GetAtt Function.Arn
